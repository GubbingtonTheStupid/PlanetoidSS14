name: Mirror Merged PRs from upstream

on:
  schedule:
    - cron: '0 * * * *' # Runs every hour, adjust as needed

permissions:
  contents: write
  pull-requests: write

jobs:
  mirror_pr:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout upstream repository
      uses: actions/checkout@v2
      with:
        repository: space-wizards/space-station-14
        ref: master
        token: ${{ secrets.GH_PAT }}
        fetch-depth: 0

    - name: Fetch merged PRs
      run: |
        # Fetch merged PRs using GitHub API
        MERGED_PRS=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
          "https://api.github.com/repos/space-wizards/space-station-14/pulls?state=closed&base=master")

        echo "$MERGED_PRS" > merged_prs.json

    - name: Check for new merged PRs
      id: check_new_prs
      run: |
        NEW_PR_FOUND=false
        for PR in $(jq -r '.[] | select(.merged_at != null) | .number' merged_prs.json); do
          # Check if PR has already been mirrored
          MIRRORED=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
            "https://api.github.com/repos/TerraTheUnwisest/PlanetoidSS14/pulls?head=${{ github.actor }}:pr-${PR}")

          if [ "$(echo "$MIRRORED" | jq -r '. | length')" -eq 0 ]; then
            NEW_PR_FOUND=true
            echo "NEW_PR_NUMBER=$PR" >> $GITHUB_ENV
            break
          fi
        done

        echo "NEW_PR_FOUND=$NEW_PR_FOUND" >> $GITHUB_ENV

    - name: Get PR details
      if: env.NEW_PR_FOUND == 'true'
      run: |
        PR_NUMBER=${{ env.NEW_PR_NUMBER }}
        
        PR_DETAILS=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
          https://api.github.com/repos/space-wizards/space-station-14/pulls/${PR_NUMBER})
        
        echo "PR_TITLE=$(echo "$PR_DETAILS" | jq -r .title)" >> $GITHUB_ENV
        echo "PR_BODY=$(echo "$PR_DETAILS" | jq -r .body)" >> $GITHUB_ENV
        echo "PR_BRANCH=$(echo "$PR_DETAILS" | jq -r .head.ref)" >> $GITHUB_ENV

    - name: Create a new PR in your fork
      if: env.NEW_PR_FOUND == 'true'
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: |
        PR_NUMBER=${{ env.NEW_PR_NUMBER }}
        curl -X POST -H "Authorization: token $GH_PAT" \
          -d "{\"title\":\"[MIRROR] ${PR_TITLE}\",\"body\":\"${PR_BODY}\",\"head\":\"pr-${PR_NUMBER}\",\"base\":\"master\"}" \
          https://api.github.com/repos/TerraTheUnwisest/PlanetoidSS14/pulls
